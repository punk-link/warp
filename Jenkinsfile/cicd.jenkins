pipeline {
    agent any

    environment {
        // Telegram configuration
        TOKEN = credentials('telegram-api')
        CHAT_ID = credentials('chatid')
        JOB_NAME = "${env.JOB_NAME}"
        BUILD_NUMBER = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Clone repository') {
            steps {
                checkout scm
            }
        }
    
        stage('Build image') {
            steps {
                echo 'Starting to build docker image '
                    script {
                        def customImage = docker.build ("registry.punk.link/warp-webapp:${env.BUILD_ID}-DEV")
                        docker.withRegistry('https://registry.punk.link', 'docker_auth') { 
                        customImage.push()
                    } 
                }
            }
        }
    }

    post {
        success {
            script {
                sh "curl --location --request POST 'https://api.telegram.org/bot'${TOKEN}'/sendMessage' --form text='kazino' --form chat_id=-692876171"
            }
        }

        failure {
            script {
                sh "curl -X POST -H 'Content-Type: application/json' -d '{\"chat_id\": \"${CHAT_ID}\", \"text\": \"${JOB_NAME}: #${BUILD_NUMBER}\n❌Deploy failure!\", \"disable_notification\": false}' \"https://api.telegram.org/bot${TOKEN}/sendMessage\""
            }
       }

       aborted {
           script {
                sh "curl -X POST -H 'Content-Type: application/json' -d '{\"chat_id\": \"${CHAT_ID}\", \"text\": \"${JOB_NAME}: #${BUILD_NUMBER}\n❌Deploy aborted!\", \"disable_notification\": false}' \"https://api.telegram.org/bot${TOKEN}/sendMessage\""
            }
        }    
    }
}
