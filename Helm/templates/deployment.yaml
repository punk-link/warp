apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "warp-webapp.fullname" . }}
  labels:
    {{- include "warp-webapp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "warp-webapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "warp-webapp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "warp-webapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - args:
          - --reporter.grpc.host-port={{ .Values.jaeger.collector_host }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: jaegertracing/jaeger-agent:1.23.0
          imagePullPolicy: IfNotPresent
          name: jaeger-agent
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.grpc.port }}
              protocol: TCP
            - name: db
              containerPort: {{ .Values.service.db.port }}
              protocol: TCP 
          startupProbe:
            httpGet:
              path: /health
              port: http
            timeoutSeconds: 30
            failureThreshold: 12              
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
